---
- name: Add repo for Java
  apt_repository:
    repo: 'ppa:webupd8team/java'
    state: present
    update_cache: yes

- name: Accept java licenses
  debconf:
    name: "oracle-java7-installer"
    question: "shared/accepted-oracle-license-v1-1"
    vtype: "select"
    value: "true"

- name: Install neccessary libraries
  apt:
    name: "{{item}}"
    update_cache: yes
    cache_valid_time: 604800
    state: present
  with_items:
    -  python-pip
    -  oracle-java7-installer

- name: Install Python libraries
  pip:
    name: pexpect

- name: Create an opt library
  file:
    dest: "/opt/"
    owner: "root"
    state: directory
    mode: 0775

- name: Download Hadoop
  get_url:
    url: "{{ mirrors|random }}/hadoop-2.6.0.tar.gz"
    dest: "/opt/"
    timeout: 1000
  register: hadoop_tar

- name: Unarchive Hadoop
  unarchive:
    src: "/opt/hadoop-2.6.0.tar.gz"
    dest: "/opt"
    copy: no
  when: hadoop_tar | changed

- name: Create a link for hadoop dir
  file:
    dest: "{{ item.destination }}"
    src: "{{ item.source }}"
    state: link
    force: yes
  with_items:
    - { destination: '{{ hadoop_home }}', source: '/opt/hadoop-2.6.0'}
    - { destination: '/opt/hadoop', source: '{{ hadoop_home }}'}

- name: Export Java Home environment var
  lineinfile:
    dest: "{{ hadoop_home }}/etc/hadoop/hadoop-env.sh"
    regexp: "JAVA_HOME="
    line: "export JAVA_HOME=/usr/lib/jvm/java-7-oracle"

- name: Create config files
  template:
    src: "{{ item.source }}"
    dest: "{{ item.destination }}"
    owner: root
    group: root
  with_items:
    - { destination: '{{ hadoop_home }}/etc/hadoop/mapred-site.xml', source: 'mapred-site.xml.j2'}
    - { destination: '{{ hadoop_home }}/etc/hadoop/core-site.xml', source: 'core-site.xml.j2'}
    - { destination: '{{ hadoop_home }}/etc/hadoop/hdfs-site.xml', source: 'hdfs-site.xml.j2'}
    - { destination: '{{ hadoop_home }}/etc/hadoop/yarn-site.xml', source: 'yarn-site.xml.j2'}

- name: Create necessary directories
  file:
    path: "{{item}}"
    state: directory
    mode: 0755
  with_items:
    - "{{namenode_dir}}"
    - "{{datanode_dir}}"
    - "/root/output/"

- name: Create master and slave configs
  template:
    src: "{{ item.source }}"
    dest: "{{ item.destination }}"
    owner: root
    group: root
  with_items:
    - { destination: '{{ hadoop_home }}/etc/hadoop/masters', source: 'masters'}
    - { destination: '{{ hadoop_home }}/etc/hadoop/slaves', source: 'slaves'}

- name: Remove hdfs leftover
  command: "rm -rf /tmp/hadoop-root /opt/hdfs/datenode/* /opt/hdfs/namenode/*"

- name: Format namenode on master
  expect:
    command: "{{ hadoop_home }}/bin/hdfs namenode -format"
    responses:
       Re-format: "Y"
  when: inventory_hostname in groups['master']

- name: Start DFS
  command: "{{ hadoop_home }}/sbin/start-dfs.sh"
  when: inventory_hostname in groups['master']

- name: Start YARN
  command: "{{ hadoop_home }}/sbin/start-yarn.sh"
  when: inventory_hostname in groups['master']
